Problem:

When the agent was tested on the new testing framework, two out of three tests failed and the following error message appeared:

java.lang.VerifyError: (class: transform/TransformationTest$1, method: <init> signature: (Ltransform/TransformationTest;)V) Expecting to find object/array on stack

The (testing) user program was interrupted in verification phase and did not run at all.


Cause:

It turned out that the problem was in the (implicit) constructor of an anonymous class derived from TransformationTest, a class used by the testing framework. This class was assigning itself a value in the constructor, using the "this$0" keyword. As this was performed using the putfield instruction, it was interpreted by the agent as a field access, and so the agent tried to register it by calling the regAccess function. However, this function expected the object being passed to it to be fully initialized, which was apparently not the case. 


Fix:

The problem was temporarily fixed by making the agent ignore the cases where an object is accessed from its own constructor. However, I am not sure if this assumption is justified. There may also be other cases causing a similar problem.